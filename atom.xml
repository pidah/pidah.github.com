<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DevOps Diary]]></title>
  <link href="http://www.devopsdiary.com/atom.xml" rel="self"/>
  <link href="http://www.devopsdiary.com/"/>
  <updated>2013-10-22T19:10:13+01:00</updated>
  <id>http://www.devopsdiary.com/</id>
  <author>
    <name><![CDATA[Peter Idah]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wake Up the Sun]]></title>
    <link href="http://www.devopsdiary.com/blog/2013/10/22/wake-up-the-sun/"/>
    <updated>2013-10-22T01:20:00+01:00</updated>
    <id>http://www.devopsdiary.com/blog/2013/10/22/wake-up-the-sun</id>
    <content type="html"><![CDATA[<p>Peering out through my son&rsquo;s bedroom window was nothing out there, but utter pitch darkness. Alas, the time was only 16:30. I sighed to myself &ndash; It was that time of the year again.</p>

<p>I never really liked winter. The weather had dropped to below freezing point. You felt the chills in your knuckles, up your spine, under your feet and the cold whistling air all over your face. I dreaded having to alight every morning and walk 400yds to the train station on my commute to work. With my teeth chattering and body shivering trudging along the slippery snow path, I would contemplate whether my wife and I had made a good decision to migrate to England 6 years ago. I would often yearn for the sunny tropical climate that I was used to all-year round, in my home country. But I always said to myself, “the winter will soon be over and summer will be back again”. Yes indeed – In only 3 months’ time.</p>

<p>I could hardly wait to run back home to my lovely wife and 3-year old son everyday. Their love and energy more than provided the warmth I needed to make it through yet another day. “Daddy, I want to go to the shops!” – The voice of my son cut through my self-loathing thoughts of despair, jolting me back into the present. I told him it was too late to go to the shops now, as the sun had gone down and it was now time for bed.</p>

<p>My son boisterous with energy was always ready for an adventure in a heartbeat. As far as he was concerned, winter was simply fun time. He was not be-riddled with the many thoughts that shuttle through a parents mind on a school week-night. I was just pre-occupied with wrapping up the day and getting him into bed. Thankfully, there was one good thing about winter; the early fall of night always made it easier to convince him it was time to shutdown for the day.</p>

<p>Thinking that the discussion was over and done with, I proceeded to draw the curtains and pick up the toys littered across the bedroom floor. Then he said, “Daddy all we have to do is wake up the sun and then we can go to the shop”. In a familiar reflex manner, I prepped myself and thought how I might do the fatherly-thing of seizing the opportunity to explain to my son a bit of science, breaking down how the celestial bodies played together la-di-da-di-da &ndash; to this curious toddler. After all, I had been around long enough to know that his line of reasoning was misaligned and would need a bit of tweaking.</p>

<p>Then in a split-second his words hit me like a bolt of lightning – Wake up the sun!</p>

<p>In my son&rsquo;s world there was nothing unfathomable about that idea; the sun could absolutely wake up and we could indeed hit the shops with the sun shining on us right at that moment. His paradigm had not been seared with earthly “experience”. Entertaining such a thought was normal, entirely possible and totally expected.</p>

<p>Several years of working as an Operations Engineer had taught me a lot about a related idea – Follow-the-sun-model. I had supported various Linux systems in a 24-hr follow-the-sun model where we would do a shift and handover to a team in a different time-zone to continue proving support to customers round the clock. I was pretty intimate with the practice of following the sun, perhaps too well. But the concept of waking up the sun was alien to me.</p>

<p>Waking up the sun is all about viewing the world right side up. Envisioning the world, the way it should be. Bravely going after your dreams knowing fully well that your paradigm is indeed normal, entirely possible and firmly within reach.</p>

<p>That has been the mantra for the startup journey my wife and I embarked on over a year ago. Well, to be honest mostly my wife and a little bit of me. You see, my wife is totally awesome. Yes I said so myself. She has one challenge though I have to admit – she is a first class citizen of the species of people branded “Creatives”.
Let me spell it out, this means she can do everything &ndash; from photography, visual design, sewing, basket-making, fund-raising, business planning, public speaking, authoring, script-writing, guitar-strumming, hair-making, coding, farming, interior-decor, perfume-making, mixing awesome body creams and soaps and a whole slew of other things too numerous to mention.</p>

<p>So after much deliberation, we finally settled on an industry that was overdue for a shake-up. It was time to wake up the sun. Driven by the pure desire to set the records straight, we recently launched our first startup &ndash;  <a href="http://www.sheatruth.com">Sheatruth.com</a></p>

<p>We are truly excited about <a href="http://www.sheatruth.com">Sheatruth</a> and the potential it holds. The journey so far has been chock-full of challenges, but the desire to shine the light on the personal body care industry was too great a dream to let down, and too precious an opportunity to pass-up. We firmly believe that people everywhere are worthy of true luxury, and want to put the care back in personal care products.</p>

<p>I wish I could tell you that my son and I went ahead to go shopping that winter night, but the fairy tale didn&rsquo;t end that way I am afraid. However my son taught me an important lesson, I hope never to forget – rather than follow-the-sun, WAKE UP THE SUN!</p>

<p>I don&rsquo;t know where you are in your journey, but we challenge you to look at the world around you again, only but this time around, with fresh eyes, the eyes of a three-year old and go wake up the sun.</p>

<p>Isn&rsquo;t he just the cutest ever?</p>

<p><img src="https://s3.amazonaws.com/wakeup/wake_up_the_sun.jpg" title="wake up" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevOps101 coming soon]]></title>
    <link href="http://www.devopsdiary.com/blog/2013/10/21/devops101-coming-soon/"/>
    <updated>2013-10-21T23:47:00+01:00</updated>
    <id>http://www.devopsdiary.com/blog/2013/10/21/devops101-coming-soon</id>
    <content type="html"><![CDATA[<p>I have ignored my blog for quite a while; not intentionally though. So much has been going on personally and professionally, that blogging has been totally squeezed out. But I am fixing that.</p>

<p>So many tools and approaches have grown in the DevOps community. In the coming days I will be talking about them, so do stay tuned.</p>

<p>One thing that has kept me busy is my upcoming book on DevOps &ndash; DevOps 101. It&rsquo;s taken me quite a while to get it finished, but I am delighted that it would be out in a couple of weeks. I will be talking more about this in some upcoming posts, so do please check back.</p>

<p>That&rsquo;s all I have to say for now. Thanks and have a great time!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying nodejs nginx upstart monit redis on ec2 with puppet and vagrant]]></title>
    <link href="http://www.devopsdiary.com/blog/2013/05/16/deploying-node-dot-js-plus-nginx-plus-upstart-plus-monit-on-ec2-with-puppet-and-vagrant/"/>
    <updated>2013-05-16T18:02:00+01:00</updated>
    <id>http://www.devopsdiary.com/blog/2013/05/16/deploying-node-dot-js-plus-nginx-plus-upstart-plus-monit-on-ec2-with-puppet-and-vagrant</id>
    <content type="html"><![CDATA[<p>In a previous post I wrote about <a href="http://www.devopsdiary.com/blog/2013/05/07/automated-deployment-of-aws-ec2-instances-with-vagrant-and-puppet/">automating deployments on AWS Cloud instances with vagrant and puppet</a>. Today I will be describing how we deploy Node.js with nginx,redis, upstart, monit on ec2 using vagrant and puppet.</p>

<p>Our developers are rewriting an existing application in Node.js and we basically needed a consistent environment to play with, which would mirror the target production environment as much as possible. So we picked out technology stack as follows:</p>

<ul>
<li>node.js &ndash; obviously</li>
<li>nginx   &ndash; As a reverse proxy server. We are using nginx 1.5.0 which has websocket support. You could also use the stable nginx version that comes with your linux distribution in combination with varnish or haproxy to handle websocket connection requests. If you are using nginx development builds, make sure you upgrade to nginx 1.5.0 or 1.4.1 to address the <a href="http://www.ehackingnews.com/2013/05/cve-2013-2028-buffer-overflow.html">recent buffer overflow vulnerability security issue</a>.</li>
<li>upstart &ndash; to daemonize the node app</li>
<li>monit &ndash; to proactively check that the app is actually humming nicely.</li>
<li>redis &ndash; for handling session data</li>
</ul>


<p>0ur approach is simply to start with a basic configuration which works well and fine-tune as we go along. The description below doesn&rsquo;t apply strictly to Node.js deployments; it could really be adapted for other web-apps/frameworks e.g. python/django/gunicorn behind nginx.</p>

<h2>Setup</h2>

<p>First of all clone the nodejs_deployment repo as follows:&ndash;</p>

<figure class='code'><figcaption><span>clone the node.js deployment repo</span><a href='https://github.com/pidah/nodejs_deployment'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git@github.com:pidah/nodejs_deployment.git
</span></code></pre></td></tr></table></div></figure>


<p>switch into the nodejs_deployment directory and have a look at the contents &ndash;</p>

<figure class='code'><figcaption><span>review the contents of nodejs_deployment</span><a href='https://github.com/pidah/nodejs_deployment'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>nodejs_deployment/
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>README.md Vagrantfile app.js      package.json    puppet
</span></code></pre></td></tr></table></div></figure>


<h2>Node.js app</h2>

<p>app.js shown below is a very simple node application listening on port 3000. The package.json file contains the node app dependencies. This app only depends on express.</p>

<figure class='code'><figcaption><span>node.js app</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/app.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat app.js
</span><span class='line'>var <span class="nv">express</span> <span class="o">=</span> require<span class="o">(</span><span class="s2">&quot;express&quot;</span><span class="o">)</span>;
</span><span class='line'>var <span class="nv">app</span> <span class="o">=</span> express<span class="o">()</span>;
</span><span class='line'>app.use<span class="o">(</span>express.logger<span class="o">())</span>;
</span><span class='line'>
</span><span class='line'>app.get<span class="o">(</span><span class="s1">&#39;/&#39;</span>, <span class="k">function</span><span class="o">(</span>request, response<span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  response.send<span class="o">(</span><span class="s1">&#39;My awesome node app!&#39;</span><span class="o">)</span>;
</span><span class='line'><span class="o">})</span>;
</span><span class='line'>
</span><span class='line'>var <span class="nv">port</span> <span class="o">=</span> process.env.PORT <span class="o">||</span> 3000;
</span><span class='line'>app.listen<span class="o">(</span>port, <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  console.log<span class="o">(</span><span class="s2">&quot;Listening on &quot;</span> + port<span class="o">)</span>;
</span><span class='line'><span class="o">})</span>;
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat package.json
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;author&quot;</span>: <span class="s2">&quot;Peter Idah&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;awesome-app&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;0.0.1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;dependencies&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;express&quot;</span>: <span class="s2">&quot;~3.1.0&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Vagrantfile</h2>

<p> The Vagrantfile holds the vagrant configuration &ndash;</p>

<figure class='code'><figcaption><span>Vagrantfile</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/Vagrantfile'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;ubuntu_aws&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;.&quot;</span><span class="p">,</span> <span class="s2">&quot;/vagrant&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;vagrant-root&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:aws</span> <span class="k">do</span> <span class="o">|</span><span class="n">aws</span><span class="p">,</span> <span class="n">override</span><span class="o">|</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">keypair_name</span> <span class="o">=</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'>    <span class="n">override</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">private_key_path</span> <span class="o">=</span> <span class="s2">&quot;~/.ssh/development.pem&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">instance_type</span> <span class="o">=</span> <span class="s2">&quot;t1.micro&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">security_groups</span> <span class="o">=</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">ami</span> <span class="o">=</span> <span class="s2">&quot;ami-c5afc2ac&quot;</span>
</span><span class='line'>    <span class="n">override</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&quot;ubuntu&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">tags</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;Name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Nodejs App&#39;</span><span class="p">,</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:puppet</span> <span class="k">do</span> <span class="o">|</span><span class="n">puppet</span><span class="o">|</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifests_path</span> <span class="o">=</span> <span class="s2">&quot;puppet/manifests&quot;</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifest_file</span>  <span class="o">=</span> <span class="s2">&quot;init.pp&quot;</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">options</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;--fileserverconfig=/vagrant/puppet/fileserver.conf&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The Vagrantfile will need to be updated with your AWS details. I am using a custom AMI with puppet baked in. Then you need to setup your AWS keys in your local ~/.profile file as follows</p>

<figure class='code'><figcaption><span>Configuring AWS Credentials in ~/.profile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nb">export </span><span class="nv">AWS_ACCESS_KEY</span><span class="o">=</span><span class="s2">&quot;AKXXXXXXXXXXXXXXX&quot;</span>
</span><span class='line'> <span class="nb">export </span><span class="nv">AWS_SECRET_KEY</span><span class="o">=</span><span class="s2">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then source the ~/.profile to make the variables available in the current shell session</p>

<figure class='code'><figcaption><span>source the ~/.profile file</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nb">source</span> ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>Every AWS EC2 instance would have an ssh key pair. I keep my ssh private key in  ~/.ssh/development.pem</p>

<p>For more details on the Vagrantfile, have a look at <a href="http://www.devopsdiary.com/blog/2013/05/07/automated-deployment-of-aws-ec2-instances-with-vagrant-and-puppet/">automated deployments of ec2 instances with vagrant and puppet</a>.</p>

<h2>puppet configuration overview</h2>

<p>The puppet configuration layout is shown below &ndash;</p>

<figure class='code'><figcaption><span>puppet manifests and files</span><a href='https://github.com/pidah/nodejs_deployment/tree/master/puppet/manifests'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls puppet/manifests
</span><span class='line'>init.pp       nginx.pp    redis.pp
</span><span class='line'>monit.pp  nodejs.pp   upstart.pp
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat puppet/manifests/init.pp
</span><span class='line'>include nodejs
</span><span class='line'>include monit
</span><span class='line'>include nginx
</span><span class='line'>include upstart
</span><span class='line'>include redis
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls puppet/files
</span><span class='line'>app.conf  deploy_node.sh  monitrc     nginx.conf
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat puppet/fileserver.conf
</span><span class='line'><span class="c"># Puppet template files directory</span>
</span><span class='line'><span class="o">[</span>files<span class="o">]</span>
</span><span class='line'>    path /opt/node/puppet/files
</span><span class='line'>    allow *
</span><span class='line'><span class="nv">$ </span>cat puppet/manifests/init.pp
</span></code></pre></td></tr></table></div></figure>


<p>Each component is in a seperate manitfest file. We include all of them init.pp as shown above. puppet/fileserver.conf tells puppet to serve files from our custom mount point /opt/node/puppet/files. More information on this is available on <a href="http://docs.puppetlabs.com/guides/file_serving.html">puppetlabs website</a>. Let&rsquo;s go through each manifest configuration file:</p>

<h2>node.js config</h2>

<p>The following shows the node.js puppet configuration files</p>

<figure class='code'><figcaption><span>node.js puppet configuration</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/manifests/nodejs.pp'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat puppet/manifests/nodejs.pp
</span><span class='line'>class nodejs <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    file <span class="o">{</span> <span class="s2">&quot;/opt/node&quot;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; <span class="s2">&quot;link&quot;</span>,
</span><span class='line'>        <span class="nv">target</span>  <span class="o">=</span>&gt; <span class="s2">&quot;/vagrant&quot;</span>,
</span><span class='line'>        <span class="nv">force</span>   <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="o">{</span> <span class="s2">&quot;apt-get update&quot;</span>:
</span><span class='line'>        <span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin&quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; File<span class="o">[</span><span class="s2">&quot;/opt/node&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$nodejs_deps</span> <span class="o">=</span> <span class="o">[</span> <span class="s2">&quot;python-software-properties&quot;</span>, <span class="s2">&quot;g++&quot;</span>, <span class="s2">&quot;make&quot;</span>, <span class="s2">&quot;git&quot;</span>, <span class="s2">&quot;vim&quot;</span> <span class="o">]</span>
</span><span class='line'>        package <span class="o">{</span> <span class="nv">$nodejs_deps</span>:
</span><span class='line'>        <span class="nv">ensure</span> <span class="o">=</span>&gt; installed,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Exec<span class="o">[</span><span class="s2">&quot;apt-get update&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    file <span class="o">{</span> <span class="s2">&quot;/tmp/deploy_node.sh&quot;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; present,
</span><span class='line'>        <span class="nv">mode</span>    <span class="o">=</span>&gt; <span class="s1">&#39;0775&#39;</span>,
</span><span class='line'>        <span class="nb">source</span>  <span class="o">=</span>&gt; <span class="s2">&quot;puppet:///files/deploy_node.sh&quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Package<span class="o">[</span><span class="nv">$nodejs_deps</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="o">{</span> <span class="s2">&quot;install_node&quot;</span>:
</span><span class='line'>        <span class="nb">command</span> <span class="o">=</span>&gt; <span class="s2">&quot;/bin/bash /tmp/deploy_node.sh&quot;</span>,
</span><span class='line'>        <span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin:/usr/local/bin:/bin:/usr/sbin:/sbin&quot;</span>,
</span><span class='line'>        <span class="nv">timeout</span> <span class="o">=</span>&gt; 0,
</span><span class='line'>        <span class="nv">unless</span> <span class="o">=</span>&gt; <span class="s2">&quot;ls /usr/local/bin/node &quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; File<span class="o">[</span><span class="s2">&quot;/tmp/deploy_node.sh&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="o">{</span> <span class="s2">&quot;npm_install&quot;</span>:
</span><span class='line'>        <span class="nv">cwd</span> <span class="o">=</span>&gt; <span class="s2">&quot;/opt/node&quot;</span>,
</span><span class='line'>        <span class="nb">command</span> <span class="o">=</span>&gt; <span class="s2">&quot;npm install&quot;</span>,
</span><span class='line'>        <span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin:/usr/local/bin:/bin:/usr/sbin:/sbin&quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Exec<span class="o">[</span><span class="s2">&quot;install_node&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat puppet/files/deploy_node.sh
</span><span class='line'><span class="c">#!/bin/bash -x</span>
</span><span class='line'><span class="nv">version</span><span class="o">=</span>0.10.5
</span><span class='line'>mkdir /tmp/nodejs <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$_</span>
</span><span class='line'>wget -N http://nodejs.org/dist/v<span class="k">${</span><span class="nv">version</span><span class="k">}</span>/node-v<span class="k">${</span><span class="nv">version</span><span class="k">}</span>.tar.gz
</span><span class='line'>tar xzvf node-v<span class="k">${</span><span class="nv">version</span><span class="k">}</span>.tar.gz <span class="o">&amp;&amp;</span> <span class="nb">cd </span>node-v<span class="k">${</span><span class="nv">version</span><span class="k">}</span>
</span><span class='line'>./configure
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<p>The app is deployed to /opt/node which is sym-linked to /vagrant on the ec2 instance. The node.js package provided by ubuntu is really old, so we decided to build node.js from source as shown in the deploy_node.sh file above. The make build takes longer than 5 minutes which is the default timeout for the puppet exec resource, so I set <code>timeout =&gt;0</code> in <code>exec {"install_node":}</code> above to prevent a timeout. Subsequent <code>vagrant provision</code> runs would just do a quick check to confirm that node is already installed. Alternatively you could use the node.js packages available at <a href="https://launchpad.net/~chris-lea/+archive/node.js/">https://launchpad.net/~chris-lea/+archive/node.js/</a></p>

<h2>upstart config</h2>

<figure class='code'><figcaption><span>upstart configuration file</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/files/app.conf'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat puppet/manifests/upstart.pp
</span><span class='line'>class upstart <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    file <span class="o">{</span> <span class="s2">&quot;/etc/init/app.conf&quot;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; file,
</span><span class='line'>        <span class="nb">source</span>  <span class="o">=</span>&gt; <span class="s2">&quot;puppet:///files/app.conf&quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Class<span class="o">[</span><span class="s2">&quot;Nodejs&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    service <span class="o">{</span> <span class="s1">&#39;app&#39;</span>:
</span><span class='line'>        <span class="nv">ensure</span> <span class="o">=</span>&gt; running,
</span><span class='line'>        <span class="nv">provider</span> <span class="o">=</span>&gt; <span class="s1">&#39;upstart&#39;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; File<span class="o">[</span><span class="s1">&#39;/etc/init/app.conf&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$ </span>cat puppet/files/app.conf
</span><span class='line'>description <span class="s2">&quot;node.js app server&quot;</span>
</span><span class='line'>author      <span class="s2">&quot;Peter Idah&quot;</span>
</span><span class='line'>
</span><span class='line'>env <span class="nv">PROGRAM_NAME</span><span class="o">=</span><span class="s2">&quot;awesome-app&quot;</span>
</span><span class='line'>env <span class="nv">FULL_PATH</span><span class="o">=</span><span class="s2">&quot;/opt/node&quot;</span>
</span><span class='line'>env <span class="nv">FILE_NAME</span><span class="o">=</span><span class="s2">&quot;app.js&quot;</span>
</span><span class='line'>env <span class="nv">NODE_PATH</span><span class="o">=</span><span class="s2">&quot;/usr/local/bin/node&quot;</span>
</span><span class='line'>
</span><span class='line'>start on startup
</span><span class='line'>stop on shutdown
</span><span class='line'>
</span><span class='line'>script
</span><span class='line'>
</span><span class='line'>    <span class="nb">echo</span> <span class="nv">$$</span> &gt; /var/run/<span class="nv">$PROGRAM_NAME</span>.pid
</span><span class='line'>    <span class="nb">cd</span> <span class="nv">$FULL_PATH</span>
</span><span class='line'>    <span class="nb">exec</span> <span class="nv">$NODE_PATH</span> <span class="nv">$FULL_PATH</span>/<span class="nv">$FILE_NAME</span> &gt;&gt; <span class="nv">$FULL_PATH</span>/node_app.log 2&gt;&amp;1
</span><span class='line'>end script
</span><span class='line'>
</span><span class='line'>pre-start script
</span><span class='line'>    <span class="c"># Date format same as (new Date()).toISOString() for consistency</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting&quot;</span> &gt;&gt; <span class="nv">$FULL_PATH</span>/node_app.log
</span><span class='line'>end script
</span><span class='line'>
</span><span class='line'>pre-stop script
</span><span class='line'>    rm /var/run/<span class="nv">$PROGRAM_NAME</span>.pid
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping&quot;</span> &gt;&gt; <span class="nv">$FULL_PATH</span>/node_app.log
</span><span class='line'>end script
</span></code></pre></td></tr></table></div></figure>


<p>The upstart.pp manifest above ensures the app is running with the configuration sourced from /etc/init/app.conf. This file daemonizes the application, specifies the process id location, logfile and the start/stop control scripts.</p>

<h2>monit config</h2>

<figure class='code'><figcaption><span>monit config file</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/files/monitrc'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat puppet/manifests/monit.pp
</span><span class='line'>class monit <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    package <span class="o">{</span> <span class="s2">&quot;monit&quot;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; latest,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Class<span class="o">[</span><span class="s2">&quot;Nodejs&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    file <span class="o">{</span> <span class="s1">&#39;/etc/monit/monitrc&#39;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; present,
</span><span class='line'>        <span class="nv">mode</span>    <span class="o">=</span>&gt; <span class="s1">&#39;0600&#39;</span>,
</span><span class='line'>        <span class="nv">owner</span>   <span class="o">=</span>&gt; <span class="s1">&#39;root&#39;</span>,
</span><span class='line'>        <span class="nv">group</span>   <span class="o">=</span>&gt; <span class="s1">&#39;root&#39;</span>,
</span><span class='line'>        <span class="nb">source</span>  <span class="o">=</span>&gt; <span class="s2">&quot;puppet:///files/monitrc&quot;</span>,
</span><span class='line'>        <span class="nv">notify</span>  <span class="o">=</span>&gt; Service<span class="o">[</span><span class="s1">&#39;monit&#39;</span><span class="o">]</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Package<span class="o">[</span><span class="s2">&quot;monit&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    service <span class="o">{</span> <span class="s1">&#39;monit&#39;</span>:
</span><span class='line'>        <span class="nv">ensure</span>     <span class="o">=</span>&gt; running,
</span><span class='line'>        <span class="nb">enable</span>     <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">hasrestart</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">require</span>    <span class="o">=</span>&gt; File<span class="o">[</span><span class="s1">&#39;/etc/monit/monitrc&#39;</span><span class="o">]</span>,
</span><span class='line'>        <span class="nv">subscribe</span>  <span class="o">=</span>&gt; File<span class="o">[</span><span class="s1">&#39;/etc/monit/monitrc&#39;</span><span class="o">]</span>,
</span><span class='line'>        <span class="nv">notify</span>     <span class="o">=</span>&gt; Service<span class="o">[</span><span class="s1">&#39;app&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat puppet/files/monitrc
</span><span class='line'><span class="c">#!monit</span>
</span><span class='line'><span class="nb">set </span>logfile /opt/node/monit_app.log
</span><span class='line'>
</span><span class='line'>check process nodejs with pidfile <span class="s2">&quot;/var/run/awesome-app.pid&quot;</span>
</span><span class='line'>    start <span class="nv">program</span> <span class="o">=</span> <span class="s2">&quot;/sbin/start app&quot;</span>
</span><span class='line'>    stop <span class="nv">program</span>  <span class="o">=</span> <span class="s2">&quot;/sbin/stop app&quot;</span>
</span><span class='line'>    <span class="k">if </span>failed port 3000 protocol HTTP
</span><span class='line'>        request /
</span><span class='line'>        with timeout 2 seconds
</span><span class='line'>        <span class="k">then </span>restart
</span><span class='line'>    <span class="k">if </span>cpu &gt; 80% <span class="k">for </span>10 cycles <span class="k">then </span>restart
</span><span class='line'>    <span class="k">if </span>3 restarts within 10 cycles <span class="k">then </span>timeout
</span></code></pre></td></tr></table></div></figure>


<p>The monit.pp manifest above ensures the latest monit package is installed and running. It will also trigger a restart if it detects changes to the contents of /etc/monit/monitrc config file. The monitrc config file sets the location of the monit log file, checks the process id and specifies the path to the start/stop scripts for the node app. Then it gets a bit more interesting with a few rules &ndash; in the 1st rule  monit checks if there is a failed request to the root of the node app listening on port 3000 for 2 seconds, monit will restart the application. The 2nd rule checks for cpu usage above 80% for 10 cpu cycles and trigers a restart of the app. There are several monit rules you can add, but that&rsquo;s the general idea.</p>

<h2>nginx config</h2>

<figure class='code'><figcaption><span>nginx config file</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/files/nginx.conf'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat puppet/manifests/nginx.pp
</span><span class='line'>class nginx <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="o">{</span> <span class="s2">&quot;add_nginx_repo&quot;</span>:
</span><span class='line'>            <span class="nb">command</span> <span class="o">=</span>&gt; <span class="s2">&quot;add-apt-repository ppa:nginx/development --yes &amp;&amp; apt-get update &quot;</span>,
</span><span class='line'>            <span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin&quot;</span>,
</span><span class='line'>            <span class="nv">require</span> <span class="o">=</span>&gt; Class<span class="o">[</span>Nodejs<span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">exec</span> <span class="o">{</span> <span class="s2">&quot;install_nginx&quot;</span>:
</span><span class='line'>        <span class="nb">command</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin/apt-get install nginx -y --force-yes&quot;</span>,
</span><span class='line'>        <span class="nv">path</span> <span class="o">=</span>&gt; <span class="s2">&quot;/usr/bin:/usr/local/bin:/bin:/usr/sbin:/sbin&quot;</span>,
</span><span class='line'>        <span class="nv">unless</span> <span class="o">=</span>&gt; <span class="s2">&quot;ls /usr/sbin/nginx &quot;</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Exec<span class="o">[</span><span class="s2">&quot;add_nginx_repo&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    service <span class="o">{</span> <span class="s1">&#39;nginx&#39;</span>:
</span><span class='line'>        <span class="nv">ensure</span>     <span class="o">=</span>&gt; running,
</span><span class='line'>        <span class="nb">enable</span>     <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">hasrestart</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">require</span>    <span class="o">=</span>&gt; Exec<span class="o">[</span><span class="s1">&#39;install_nginx&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    file <span class="o">{</span> <span class="s2">&quot;/etc/nginx/nginx.conf&quot;</span>:
</span><span class='line'>        <span class="nv">ensure</span>  <span class="o">=</span>&gt; present,
</span><span class='line'>        <span class="nv">mode</span>    <span class="o">=</span>&gt; <span class="s1">&#39;0644&#39;</span>,
</span><span class='line'>        <span class="nb">source</span>  <span class="o">=</span>&gt; <span class="s2">&quot;puppet:///files/nginx.conf&quot;</span>,
</span><span class='line'>        <span class="nv">notify</span> <span class="o">=</span>&gt; Service<span class="o">[</span><span class="s1">&#39;nginx&#39;</span><span class="o">]</span>,
</span><span class='line'>        <span class="nv">require</span> <span class="o">=</span>&gt; Exec<span class="o">[</span><span class="s2">&quot;install_nginx&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat puppet/files/nginx.conf
</span><span class='line'>user www-data;
</span><span class='line'>worker_processes 4;
</span><span class='line'>pid /var/run/nginx.pid;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>events <span class="o">{</span>
</span><span class='line'>        worker_connections 768;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>http <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>        <span class="c"># Basic Settings</span>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>
</span><span class='line'>        sendfile on;
</span><span class='line'>        tcp_nopush on;
</span><span class='line'>        tcp_nodelay on;
</span><span class='line'>        keepalive_timeout 65;
</span><span class='line'>        types_hash_max_size 2048;
</span><span class='line'>
</span><span class='line'>        include /etc/nginx/mime.types;
</span><span class='line'>        default_type application/octet-stream;
</span><span class='line'>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>        <span class="c"># Logging Settings</span>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>
</span><span class='line'>        access_log /var/log/nginx/access.log;
</span><span class='line'>        error_log /var/log/nginx/error.log;
</span><span class='line'>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>        <span class="c"># Gzip Settings</span>
</span><span class='line'>        <span class="c">##</span>
</span><span class='line'>
</span><span class='line'>        gzip on;
</span><span class='line'>        gzip_disable <span class="s2">&quot;msie6&quot;</span>;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        include /etc/nginx/conf.d/*.conf;
</span><span class='line'>
</span><span class='line'>upstream nodejs_backend <span class="o">{</span>
</span><span class='line'>    server 127.0.0.1:3000;
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># the nginx server instance</span>
</span><span class='line'>
</span><span class='line'>    server <span class="o">{</span>
</span><span class='line'>        listen 80 default;
</span><span class='line'>        server_name 127.0.0.1;
</span><span class='line'>        access_log /opt/node/nginx_app.log;
</span><span class='line'>
</span><span class='line'>    <span class="c"># pass the request to the node.js server with the correct headers</span>
</span><span class='line'>    location / <span class="o">{</span>
</span><span class='line'>        proxy_set_header X-Real-IP <span class="nv">$remote_addr</span>;
</span><span class='line'>        proxy_set_header X-Forwarded-For <span class="nv">$proxy_add_x_forwarded_for</span>;
</span><span class='line'>        proxy_set_header Host <span class="nv">$http_host</span>;
</span><span class='line'>        proxy_set_header X-NginX-Proxy <span class="nb">true</span>;
</span><span class='line'>        proxy_pass http://nodejs_backend/;
</span><span class='line'>        proxy_redirect off;
</span><span class='line'>        proxy_http_version 1.1;
</span><span class='line'>        proxy_set_header Upgrade <span class="nv">$http_upgrade</span>;
</span><span class='line'>        proxy_set_header Connection <span class="s2">&quot;upgrade&quot;</span>;
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
The nginx.pp manifest above installs nginx 1.5.0 from the nginx ppa development repo, ensures the service is running as specified in nginx.conf and would trigger a restart if changes are detected in nginx.conf.
The nginx.conf file above specifies the web server should listen on port 80 and hands requests to the upstream nodejs_backend server listening on port 3000. The following three lines are required for websocket connections in nginx version 1.4+</p>

<figure class='code'><figcaption><span>nginx config file</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/files/nginx.conf'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>proxy_http_version 1.1;
</span><span class='line'>proxy_set_header Upgrade <span class="nv">$http_upgrade</span>;
</span><span class='line'>proxy_set_header Connection <span class="s2">&quot;upgrade&quot;</span>;
</span></code></pre></td></tr></table></div></figure>


<h2>redis config</h2>

<p>The redis config file below ensures that the redis-server is installed and running</p>

<figure class='code'><figcaption><span>redis config file</span><a href='https://github.com/pidah/nodejs_deployment/blob/master/puppet/manifests/redis.pp'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>class redis <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    package <span class="o">{</span> <span class="s2">&quot;redis-server&quot;</span>:
</span><span class='line'>            <span class="nv">ensure</span>  <span class="o">=</span>&gt; installed,
</span><span class='line'>            <span class="nv">require</span> <span class="o">=</span>&gt; Class<span class="o">[</span><span class="s2">&quot;Nodejs&quot;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    service <span class="o">{</span> <span class="s1">&#39;redis-server&#39;</span>:
</span><span class='line'>        <span class="nv">ensure</span>     <span class="o">=</span>&gt; running,
</span><span class='line'>        <span class="nb">enable</span>     <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">hasrestart</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="nv">require</span>    <span class="o">=</span>&gt; Package<span class="o">[</span><span class="s1">&#39;redis-server&#39;</span><span class="o">]</span>,
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Deploying the instance</h2>

<p>As described in the <a href="https://github.com/pidah/nodejs_deployment/blob/master/README.md">README.md</a> file, the next step is to launch the instance as follows</p>

<figure class='code'><figcaption><span>launching the instance</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up --provider<span class="o">=</span>aws
</span></code></pre></td></tr></table></div></figure>


<p>You can then use your regular vagrant commands as usual e.g, to ssh into your instance</p>

<figure class='code'><figcaption><span>login to the instance</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant ssh
</span></code></pre></td></tr></table></div></figure>


<p>You can get the public DNS name of the instance with the <code>vagrant ssh-config</code> command:</p>

<figure class='code'><figcaption><span>get the public dns name of ec2 instance</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant ssh-config
</span><span class='line'>
</span><span class='line'>Host nodejs
</span><span class='line'>  HostName ec2-184-73-111-79.compute-1.amazonaws.com
</span><span class='line'>  User ubuntu
</span><span class='line'>  Port 22
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  PasswordAuthentication no
</span><span class='line'>  IdentityFile <span class="s2">&quot;/Users/Peter/.ssh/development.pem&quot;</span>
</span><span class='line'>  IdentitiesOnly yes
</span><span class='line'>  LogLevel FATAL
</span></code></pre></td></tr></table></div></figure>


<p>You can then access the app from your browser e.g <a href="http://ec2-184-73-111-79.compute-1.amazonaws.com">http://ec2-184-73-111-79.compute-1.amazonaws.com</a> or using curl as shown below:</p>

<figure class='code'><figcaption><span>testing the app with curl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl http://ec2-184-73-111-79.compute-1.amazonaws.com
</span><span class='line'>My awesome node app!<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s all folks. Thanks for dropping by!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automated deployment of AWS EC2 instances with vagrant and puppet]]></title>
    <link href="http://www.devopsdiary.com/blog/2013/05/07/automated-deployment-of-aws-ec2-instances-with-vagrant-and-puppet/"/>
    <updated>2013-05-07T17:47:00+01:00</updated>
    <id>http://www.devopsdiary.com/blog/2013/05/07/automated-deployment-of-aws-ec2-instances-with-vagrant-and-puppet</id>
    <content type="html"><![CDATA[<p>The DevOps landscape is continuously evolving at an ever-increasing pace. Some of the tools and approaches that I had gotten accustomed to have just gotten better providing me with more options to play with, which is always a good thing.</p>

<p>One of the tools we use in our delivery process is vagrant by Mitchell Hashimoto. This allows us to provide all our developers an isolated environment to deploy and test applications on their local machines repeatedly and consistently.</p>

<p>By default, vagrant runs on virtualbox virtual machines. But, recently vagrant has been extended to run on AWS EC2, as well as other environments. This move has already impacted our tool chain and there are a number of other interesting features like parallel provisioning on AWS on the horizon.</p>

<p>So, to get started, you can get the latest version of vagrant (1.2.2 as of this post) at <a href="http://downloads.vagrantup.com/">http://downloads.vagrantup.com/</a> for your operating system.</p>

<p>Then install the vagrant-aws plugin as follows &ndash;</p>

<figure class='code'><figcaption><span>Install vagrant-aws plugin</span><a href='https://github.com/mitchellh/vagrant-aws'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">plugin</span> <span class="n">install</span> <span class="n">vagrant</span><span class="o">-</span><span class="n">aws</span>
</span></code></pre></td></tr></table></div></figure>


<p>The next step is to setup your local environment with AWS credentials. Many projects would likely commit their Vagrant configuration to some version control repository, it&rsquo;s best to reference your local environment for the required keys. Add the following your local users&#8217; ~/.bash_profile file</p>

<figure class='code'><figcaption><span>Configuring AWS Credentials on your local machine  </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nb">export </span><span class="nv">AWS_ACCESS_KEY</span><span class="o">=</span><span class="s2">&quot;AKXXXXXXXXXXXXXXX&quot;</span>
</span><span class='line'> <span class="nb">export </span><span class="nv">AWS_SECRET_KEY</span><span class="o">=</span><span class="s2">&quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we need to source the ~/.profile to make the variables available in the current shell session</p>

<figure class='code'><figcaption><span>source the ~/.profile file   </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nb">source</span> ~/.profile
</span></code></pre></td></tr></table></div></figure>


<p>Every AWS EC2 instance would have an ssh key pair. I keep my ssh private key in  ~/.ssh/development.pem</p>

<p>Now that we have our local environment in shape, we need to setup our vagrant configuration file &ndash; Vagrantfile. Copy this example Vagrantfile to your project root and modify with your details accordingly &ndash;</p>

<figure class='code'><figcaption><span>Example Vagrantfile for an AWS EC2 instance</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;ubuntu_aws&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;../.&quot;</span><span class="p">,</span> <span class="s2">&quot;/vagrant&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;vagrant-root&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:aws</span> <span class="k">do</span> <span class="o">|</span><span class="n">aws</span><span class="p">,</span> <span class="n">override</span><span class="o">|</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">keypair_name</span> <span class="o">=</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'>    <span class="n">override</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">private_key_path</span> <span class="o">=</span> <span class="s2">&quot;~/.ssh/development.pem&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">instance_type</span> <span class="o">=</span> <span class="s2">&quot;t1.micro&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">security_groups</span> <span class="o">=</span> <span class="s2">&quot;development&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">ami</span> <span class="o">=</span> <span class="s2">&quot;ami-c5afc2ac&quot;</span>
</span><span class='line'>    <span class="n">override</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&quot;ubuntu&quot;</span>
</span><span class='line'>    <span class="n">aws</span><span class="o">.</span><span class="n">tags</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="s1">&#39;Name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Web App&#39;</span><span class="p">,</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:puppet</span> <span class="k">do</span> <span class="o">|</span><span class="n">puppet</span><span class="o">|</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifests_path</span> <span class="o">=</span> <span class="s2">&quot;puppet/manifests&quot;</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">manifest_file</span>  <span class="o">=</span> <span class="s2">&quot;init.pp&quot;</span>
</span><span class='line'>    <span class="n">puppet</span><span class="o">.</span><span class="n">options</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;--fileserverconfig=/vagrant/puppet/fileserver.conf&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then run the following to launch the instance from your project root &ndash;</p>

<figure class='code'><figcaption><span>launch EC2 instance</span><a href='https://github.com/mitchellh/vagrant-aws'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">up</span> <span class="o">--</span><span class="n">provider</span><span class="o">=</span><span class="n">aws</span>
</span></code></pre></td></tr></table></div></figure>


<p>And there you have it ! You can ssh into the instance with the following &ndash;</p>

<figure class='code'><figcaption><span>ssh into the EC2 instance</span><a href='https://github.com/mitchellh/vagrant-aws'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">ssh</span>
</span></code></pre></td></tr></table></div></figure>


<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hi!]]></title>
    <link href="http://www.devopsdiary.com/blog/2013/05/07/hi/"/>
    <updated>2013-05-07T12:22:00+01:00</updated>
    <id>http://www.devopsdiary.com/blog/2013/05/07/hi</id>
    <content type="html"><![CDATA[<p>Hi! my name is Peter Idah. I am a Linux DevOps Engineer currently based in London.</p>

<p>I&rsquo;m setting up this blog for a few reasons &ndash; to help me keep track of things I am working on, things I am learning and to share this experience with the hope that the information will be handy to someone else.</p>

<p>I will try to keep the site updated as much as possible, so if you don’t find anything interesting today, please come back again.</p>

<p>Thanks for dropping by !</p>
]]></content>
  </entry>
  
</feed>
